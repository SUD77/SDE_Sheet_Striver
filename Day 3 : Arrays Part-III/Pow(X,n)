Leetcode link : https://leetcode.com/problems/powx-n/

Index : 

1. Note
2. Solution 


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

1. Have less understanding of this q. Need to see again

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


Solution :

TC : O(n), n is the length of n
SC : O(1)


**CODE**

class Solution {
    public double myPow(double x, int n) {
        
        double ans=1.0;
        long tempN=n;
        
        if(tempN<0) tempN=(-1)*tempN;
        
        while(tempN>0){
            
            if(tempN%2==1){
                ans=ans*x;
                tempN=tempN-1;
            }else{
                x=x*x;
                tempN=tempN/2;
            }
        }
        
        if(n<0) ans=(double)(1.0)/(double)(ans);
        return ans;
    }
}
