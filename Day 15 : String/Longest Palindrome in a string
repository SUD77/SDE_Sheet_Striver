Leetcode : https://leetcode.com/problems/longest-palindromic-substring/

Index :
1. Note
2. Solution 

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

1. For understading concept of start and end, do dry run on this

   i=3, tempLen =5
    // 0 1 2 3 4 5 6 7  
    // z a b c b a q w
        
     i=3, tempLen = 6   
    // 0 1 2 3 4 5 6 7 8 
    // z a b c c b a q w


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Solution :

**CODE**

class Solution {
    public String longestPalindrome(String s) {
      
        int tempLen=0;
        int start=0;
        int end=0;
        
        //cbbd
        
        for(int i=0;i<s.length();i++){
        
           
            int len1 = expandCentre(s,i,i);  
            int len2 = expandCentre(s,i,i+1); 
            
            tempLen=Math.max(len1,len2); 
            
            if(end-start+1 < tempLen){ 
                start=i-(tempLen-1)/2; 
                end=i+tempLen/2; 
            }
            
            
        }
        s.sub(1,3);
        return s.substring(start,end+1);
        
        
    }
    
    public int expandCentre(String s, int middleIndex1,int middleIndex2){

       
        while(middleIndex1>=0 && middleIndex2<=s.length()-1 && s.charAt(middleIndex1)==s.charAt(middleIndex2)){
            
            middleIndex1--; 
            middleIndex2++; 
        }

        return middleIndex2-middleIndex1-1;
        
    }
    
 

}
