Link : https://www.codingninjas.com/codestudio/problems/893110?topList=striver-sde-sheet-problems&leftPanelTab=0

Index : 

1. Solution : Striver's 


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Solution : Striver's

TC : O(n)
SC : O(n)

**CODE**

import java.util.*;

class Pair{
    BinaryTreeNode node;
    int hd;
    
    public Pair(BinaryTreeNode node,int hd){
        this.hd=hd;
        this.node=node;
    }
}

public class Solution {
    public static ArrayList<Integer> bottomView(BinaryTreeNode root) {
         // Write your code here.    
        
        ArrayList<Integer> ans=new ArrayList<>();
        
        if(root==null) return ans;
        
        Map<Integer,Integer> map=new TreeMap<>();
        
        Queue<Pair> q=new LinkedList<Pair>();

        q.add(new Pair(root,0));
        
        while(!q.isEmpty()) {
            
            Pair it=q.remove();
            int hd=it.hd;
            BinaryTreeNode temp=it.node;
            
            map.put(hd,temp.val);
            
            if(temp.left!=null){
               q.add(new Pair(temp.left,hd-1));
            }
            
            if(temp.right!=null){
                 q.add(new Pair(temp.right,hd+1));
            }
        } 
            
            
        for(Map.Entry<Integer,Integer> entry: map.entrySet()){
            ans.add(entry.getValue());
        }

        return ans;
      }
}
