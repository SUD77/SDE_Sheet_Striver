Leetcode link : https://leetcode.com/problems/binary-tree-right-side-view/

Index : 
1. Note
2. Solution : Striver's (Optimized)


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Note : 

1. In striver's sheet, left view is given, but I have implemented right view. 



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Solution : Striver's (Optimized)

TC : O(n)
SC : O(h) , h is the height of Tree

**CODE**

class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        
        List<Integer> result=new ArrayList<Integer>();
        rightView(root,result,0);
        
        return result;
    }
    
    public void rightView(TreeNode curr,List<Integer> result,int currDepth){
        
        if(curr==null){
            return;
        }
        
        if(currDepth==result.size()){
            result.add(curr.val);
        }
        
        rightView(curr.right,result,currDepth+1);
        rightView(curr.left,result,currDepth+1);
    }
}
